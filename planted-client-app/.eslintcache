[{"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/index.tsx":"1","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/reportWebVitals.ts":"2","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/App.tsx":"3","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Auth.tsx":"4","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/SignUp.tsx":"5","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Login.tsx":"6","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsCreate.tsx":"7","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/home/Home.tsx":"8","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsIndex.tsx":"9","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantEdit.tsx":"10","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/home/AppBar.tsx":"11","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/dashboard/Dashboard.tsx":"12","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/comments/CommentCreate.tsx":"13","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/comments/CommentsDisplay.tsx":"14"},{"size":587,"mtime":1610230549228,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1609359949968,"results":"17","hashOfConfig":"16"},{"size":1179,"mtime":1610494041362,"results":"18","hashOfConfig":"16"},{"size":701,"mtime":1610495252984,"results":"19","hashOfConfig":"16"},{"size":5918,"mtime":1610421215083,"results":"20","hashOfConfig":"16"},{"size":3659,"mtime":1610411291467,"results":"21","hashOfConfig":"16"},{"size":4772,"mtime":1610494179888,"results":"22","hashOfConfig":"16"},{"size":1059,"mtime":1610495557500,"results":"23","hashOfConfig":"16"},{"size":5185,"mtime":1610494335641,"results":"24","hashOfConfig":"16"},{"size":3823,"mtime":1610494201723,"results":"25","hashOfConfig":"16"},{"size":1874,"mtime":1610463962274,"results":"26","hashOfConfig":"16"},{"size":1799,"mtime":1610509624812,"results":"27","hashOfConfig":"16"},{"size":3157,"mtime":1610494140627,"results":"28","hashOfConfig":"16"},{"size":869,"mtime":1610514630029,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"19hwz88",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/index.tsx",[],["61","62"],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/reportWebVitals.ts",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/App.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Auth.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/SignUp.tsx",["63"],"import { Component } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from \"@material-ui/core\";\nimport \"./Register.css\";\n\ntype SignUpState = {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  profileImg: string;\n  userRole: string;\n  handleopen: boolean;\n};\n\ninterface Props {\n  updateToken: (token: string) => void;\n}\nexport default class SignUp extends Component<Props, SignUpState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      profileImg: \"\",\n      userRole: \"\",\n      handleopen: false,\n    };\n  }\n\n  handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    //fetch and set value\n    const firstName: string = this.state.firstName;\n    const lastName: string = this.state.lastName;\n    const email: string = this.state.email;\n    const password: string = this.state.password;\n    const profileImg: string = this.state.profileImg;\n    const userRole: string = this.state.userRole;\n\n    // console.log('this.state.firstName', firstName);\n    const url: string = \"http://localhost:4000/user/register\";\n    const bodyObj: SignUpState = {\n      firstName,\n      lastName,\n      email,\n      password,\n      profileImg,\n      userRole,\n      handleopen: true,\n    };\n    // console.log(url);\n    // console.log(bodyObj);\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(bodyObj),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        this.handleClose();\n        this.props.updateToken(data.token);\n        console.log(\"submit data\", data);\n        console.log(\"data.user\", data.user);\n      });\n    alert(\"User Registration Successful!\");\n  };\n\n  handleOpen = () => {\n    this.setState({\n      handleopen: true,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      handleopen: false,\n    });\n  };\n\n  setFirstName(event: string) {\n    this.setState({\n      firstName: event,\n    });\n  }\n  setLastName(event: string) {\n    this.setState({\n      lastName: event,\n    });\n  }\n  setEmail(event: string) {\n    this.setState({\n      email: event,\n    });\n  }\n  setPassword(event: string) {\n    this.setState({\n      password: event,\n    });\n  }\n  setUserRole(event: string) {\n    this.setState({\n      userRole: event,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Button onClick={this.handleOpen} id=\"RegisterButton\" variant=\"outlined\">\n          SIGN UP\n        </Button>\n        <Dialog open={this.state.handleopen} onClose={this.handleClose}>\n          <h2> Hello, Friend! One step closer to channeling your green thumb</h2>\n\n          <DialogContent id=\"RegisterIn\">\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"First name\"\n              type=\"text\"\n              fullWidth\n              onChange={(e) => this.setFirstName(e.target.value)}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"Last name\"\n              type=\"text\"\n              fullWidth\n              onChange={(e) => this.setLastName(e.target.value)}\n            />\n            <TextField\n              id=\"text\"\n              autoFocus\n              margin=\"dense\"\n              label=\"Email\"\n              type=\"text\"\n              fullWidth\n              onChange={(e) => this.setEmail(e.target.value)}\n            />\n            <TextField\n              id=\"text\"\n              autoFocus\n              margin=\"dense\"\n              label=\"Password\"\n              type=\"password\"\n              fullWidth\n              onChange={(e) => this.setPassword(e.target.value)}\n            />\n            <TextField\n              id=\"text\"\n              autoFocus\n              margin=\"dense\"\n              label=\"User/Admin\"\n              type=\"text\"\n              fullWidth\n              onChange={(e) => this.setUserRole(e.target.value)}\n            />\n          </DialogContent>\n          <DialogActions id=\"Registerbtn\">\n            <Button onClick={this.handleSubmit} id=\"btn\">\n              Sign Up\n            </Button>\n          </DialogActions>\n        </Dialog>\n        {/* <form onSubmit={this.handleSubmit}>\n          <input\n            placeholder=\"first name\"\n            value={this.state.firstName}\n            onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ firstName: e.currentTarget.value })}\n          />\n          <br />\n          <input\n            placeholder=\"last name\"\n            value={this.state.lastName}\n            onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ lastName: e.currentTarget.value })}\n          />\n          <br />\n          <input\n            type=\"email\"\n            placeholder=\"email\"\n            value={this.state.email}\n            onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ email: e.currentTarget.value })}\n          />\n          <br />\n          <input\n            type=\"password\"\n            placeholder=\"password\"\n            value={this.state.password}\n            onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ password: e.currentTarget.value })}\n          />\n          <br />\n           <input\n            type=\"profileImg\"\n            placeholder=\"profileImg\"\n            value={this.state.profileImg}\n            onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ profileImg: e.currentTarget.value })}\n          />\n          <br />\n          <input\n            placeholder=\"user/admin\"\n            value={this.state.userRole}\n            onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ userRole: e.currentTarget.value })}\n          />\n          <br />\n          <button>SIGN UP</button>\n        </form> */}\n      </div>\n    );\n  }\n}\n","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Login.tsx",["64"],"import { Component } from \"react\";\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport \"./Register.css\";\n\ninterface LoginProps {\n  setToken: (token: string) => void;\n  updateToken: (newToken: string) => void;\n}\ntype LoginState = {\n  email: string;\n  password: string;\n  handleopen: boolean;\n  incorrectPassword: boolean;\n  incorrectEmail: boolean;\n};\n\nexport default class Login extends Component<LoginProps, LoginState> {\n  constructor(props: LoginProps) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      handleopen: false,\n      incorrectPassword: false,\n      incorrectEmail: false,\n    };\n  }\n\n  handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    console.log(this.state.email);\n\n    const url: string = \"http://localhost:4000/user/login\";\n    const bodyObj: object = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(bodyObj),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"submit data\", data);\n        console.log(\"data.user\", data.user);\n        this.props.setToken(data.token);\n      });\n    alert(\"Login Successful!\");\n  };\n\n  handleOpen = () => {\n    this.setState({\n      handleopen: true,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      handleopen: false,\n    });\n  };\n\n  setEmail(event: string) {\n    this.setState({\n      email: event,\n    });\n  }\n\n  setPassword(event: string) {\n    this.setState({\n      password: event,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Welcome back!</h2>\n        <Button onClick={this.handleOpen} id=\"LoginButton\" variant=\"outlined\">\n          LOGIN\n        </Button>\n        <Dialog open={this.state.handleopen} onClose={this.handleClose}>\n          <DialogTitle id=\"dialogTitle\">Please Login</DialogTitle>\n          <DialogContent id=\"Login\">\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"Email\"\n              type=\"text\"\n              fullWidth\n              onChange={(e) => this.setEmail(e.target.value)}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"Password\"\n              type=\"password\"\n              fullWidth\n              onChange={(e) => this.setPassword(e.target.value)}\n            />\n          </DialogContent>\n          <DialogActions id=\"Loginbtn\">\n            <Button onClick={this.handleSubmit} id=\"btn\">\n              LOGIN\n            </Button>\n            {/* <Alert onClose={() => {}}>This is a success alert — check it out!</Alert>\n        <Alert\n          action={\n            <Button color=\"inherit\" size=\"small\">\n            </Button>\n          }\n        >\n    \n        </Alert> */}\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\n// <form onSubmit={this.handleSubmit}>\n//           <input\n//             type=\"email\"\n//             placeholder=\"email\"\n//             value={this.state.email}\n//             onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ email: e.currentTarget.value })}\n//           />\n//           <input\n//             type=\"password\"\n//             placeholder=\"password\"\n//             value={this.state.password}\n//             onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ password: e.currentTarget.value })}\n//           />\n//           <button>Login</button>\n//         </form>\n","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsCreate.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/home/Home.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsIndex.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantEdit.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/home/AppBar.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/dashboard/Dashboard.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/comments/CommentCreate.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/comments/CommentsDisplay.tsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":56,"nodeType":"71","messageId":"72","endLine":2,"endColumn":67},{"ruleId":"69","severity":1,"message":"73","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":13},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"@typescript-eslint/no-unused-vars","'DialogTitle' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","no-global-assign","no-unsafe-negation"]