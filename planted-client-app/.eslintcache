[{"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/index.tsx":"1","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/reportWebVitals.ts":"2","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/App.tsx":"3","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Auth.tsx":"4","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/SignUp.tsx":"5","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Login.tsx":"6","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsCreate.tsx":"7","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/home/Home.tsx":"8","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsIndex.tsx":"9","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantEdit.tsx":"10","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/home/AppBar.tsx":"11","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/dashboard/Dashboard.tsx":"12","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/comments/CommentCreate.tsx":"13","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/comments/CommentsDisplay.tsx":"14","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/helpers/environment.tsx":"15"},{"size":587,"mtime":1610659454680,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1609359949968,"results":"18","hashOfConfig":"17"},{"size":1182,"mtime":1610659454649,"results":"19","hashOfConfig":"17"},{"size":2113,"mtime":1610722137217,"results":"20","hashOfConfig":"17"},{"size":5933,"mtime":1610719909731,"results":"21","hashOfConfig":"17"},{"size":3641,"mtime":1610732152305,"results":"22","hashOfConfig":"17"},{"size":4809,"mtime":1610659454674,"results":"23","hashOfConfig":"17"},{"size":1059,"mtime":1610659454672,"results":"24","hashOfConfig":"17"},{"size":4103,"mtime":1610661405529,"results":"25","hashOfConfig":"17"},{"size":3834,"mtime":1610659454673,"results":"26","hashOfConfig":"17"},{"size":1771,"mtime":1610659454669,"results":"27","hashOfConfig":"17"},{"size":2019,"mtime":1610659454668,"results":"28","hashOfConfig":"17"},{"size":3193,"mtime":1610659454664,"results":"29","hashOfConfig":"17"},{"size":1764,"mtime":1610659454666,"results":"30","hashOfConfig":"17"},{"size":260,"mtime":1610725315902,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"19hwz88",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/index.tsx",[],["64","65"],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/reportWebVitals.ts",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/App.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Auth.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/SignUp.tsx",["66"],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Login.tsx",["67"],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsCreate.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/home/Home.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsIndex.tsx",["68","69"],"import { Component } from \"react\";\n\nimport PlantsCreate from \"./PlantsCreate\";\nimport { Row, Col } from \"antd\";\nimport logo from \"../../assets/Planted.png\";\n\nimport { Card } from \"@material-ui/core/\";\n\nimport \"./plantsDisplay.css\";\n\nimport PlantEdit from \"./PlantEdit\";\n\nimport APIURL from \"../../helpers/environment\";\n\n// import \"./plantsDisplay.css\";\n\ninterface Props {\n  updateToken: (newToken: string) => void;\n  token: string;\n  plantEdit: any;\n  // fetchPlants:() => void,\n}\n\ntype State = {\n  plantUpdate: any;\n  plantUpdateActive: boolean;\n  plantCreateActive: boolean;\n  userPlants: Array<{\n    id: number;\n    plantName: string;\n    plantImg: string;\n    temperature: string;\n    waterFrequency: string;\n    lastWatering: string;\n    isThriving: boolean;\n  }> | null;\n};\n\nexport default class PlantIndex extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      plantUpdate: {},\n      userPlants: null,\n      plantUpdateActive: false,\n      plantCreateActive: false,\n    };\n  }\n\n  fetchPlants = () => {\n    fetch(`${APIURL}/plants/userplants`, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: `${localStorage.getItem(\"token\")}`,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"response\", data);\n        this.setState({\n          userPlants: data.userPlants,\n        });\n        console.log(\"tester\", data.userPlants);\n        console.log(\"testing\", this.state.userPlants);\n      });\n  };\n\n  plantDelete = (plant: any) => {\n    fetch(`${APIURL}/plants/${plant.id}`, {\n      method: \"DELETE\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.token,\n      }),\n    }).then(() => this.fetchPlants());\n  };\n\n  componentWillMount() {\n    this.fetchPlants();\n  }\n\n  editUpdateMyPlants = (plant: any) => {\n    this.setState({\n      plantUpdate: plant,\n    });\n  };\n\n  updateOn = () => {\n    this.setState({\n      plantUpdateActive: true,\n    });\n  };\n\n  updateOff = () => {\n    this.setState({\n      plantUpdateActive: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"flex-grid\">\n        <img src={logo} id=\"logo-dis\" alt=\"Logo\" />\n        <h1>Your plants</h1>\n\n        <PlantsCreate token={this.props.token} fetchPlants={this.fetchPlants} />\n        {/* <Grid container direction=\"row\"> */}\n        <Card className=\"row\">\n          {this.state.userPlants\n            ? this.state.userPlants.map((plant) => (\n                <ul key={plant.id}>\n                  <Card className=\"plantCard\">\n                    <li className=\"plantName\">{plant.plantName}</li>\n\n                    <li>\n                      <img className=\"cardImg\" src={plant.plantImg} alt=\"plant\" />\n                    </li>\n                    <li>Temperature: {plant.temperature}</li>\n                    <li>Water Frequency: {plant.waterFrequency}</li>\n                    <li>Last Watering: {plant.lastWatering}</li>\n                    <li>{plant.isThriving}</li>\n                    <button\n                      className=\"cardbtn\"\n                      onClick={() => {\n                        this.editUpdateMyPlants(plant);\n                        this.updateOn();\n                      }}\n                    >\n                      Update\n                    </button>\n                    <button\n                      className=\"cardbtn\"\n                      onClick={() => {\n                        this.plantDelete(plant);\n                      }}\n                    >\n                      Delete\n                    </button>\n                  </Card>\n                </ul>\n              ))\n            : undefined}\n        </Card>\n\n        <br />\n        {this.state.plantUpdateActive ? (\n          <PlantEdit\n            plantUpdate={this.state.plantUpdate}\n            updateOff={this.updateOff.bind(this)}\n            token={this.props.token}\n            fetchItems={this.fetchPlants}\n          />\n        ) : (\n          <></>\n        )}\n      </div>\n    );\n  }\n}\n","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantEdit.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/home/AppBar.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/dashboard/Dashboard.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/comments/CommentCreate.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/comments/CommentsDisplay.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/helpers/environment.tsx",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":56,"nodeType":"76","messageId":"77","endLine":2,"endColumn":67},{"ruleId":"74","severity":1,"message":"78","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":13},{"ruleId":"74","severity":1,"message":"79","line":4,"column":10,"nodeType":"76","messageId":"77","endLine":4,"endColumn":13},{"ruleId":"74","severity":1,"message":"80","line":4,"column":15,"nodeType":"76","messageId":"77","endLine":4,"endColumn":18},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"@typescript-eslint/no-unused-vars","'DialogTitle' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]