[{"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/index.tsx":"1","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/reportWebVitals.ts":"2","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/App.tsx":"3","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Auth.tsx":"4","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/SignUp.tsx":"5","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Login.tsx":"6","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsCreate.tsx":"7","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsDisplay.tsx":"8","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/home/Home.tsx":"9","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsIndex.tsx":"10"},{"size":700,"mtime":1610142494181,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1609359949968,"results":"13","hashOfConfig":"12"},{"size":1939,"mtime":1610143214030,"results":"14","hashOfConfig":"12"},{"size":627,"mtime":1610143160928,"results":"15","hashOfConfig":"12"},{"size":3713,"mtime":1610143120608,"results":"16","hashOfConfig":"12"},{"size":1939,"mtime":1610143192269,"results":"17","hashOfConfig":"12"},{"size":4649,"mtime":1610136181854,"results":"18","hashOfConfig":"12"},{"size":2929,"mtime":1610147335219,"results":"19","hashOfConfig":"12"},{"size":1717,"mtime":1610143179691,"results":"20","hashOfConfig":"12"},{"size":898,"mtime":1610146272993,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19hwz88",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/index.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/reportWebVitals.ts",[],["45","46"],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/App.tsx",["47","48"],"import React, {Component} from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\nimport {History} from 'history'\n\nimport Home from './components/home/Home'\nimport Auth from './components/auth/Auth'\nimport PlantIndex from './components/plants/PlantsIndex'\n\n//import UserPlants from './components/plants/PlantsDisplay';\ntype Props = {\n  history: History\n}\n\n\nexport default class App extends Component<Props> {\n  state = {\n    token: \"\"\n  }\n  componentDidMount = () => {\n    if(localStorage.getItem('token')) {\n      this.setState({\n        token: localStorage.getItem('token')\n      });\n    }\n  }\n\n  updateToken = (newToken: string) => {\n    localStorage.setItem('token', newToken); \n    this.setState({\n        token: newToken    \n      })\n}\n\nclearToken = ()=> {\n  localStorage.clear();\n  this.setState({\n      token: ''\n  })\n}\n\n  render() {\nreturn (\n  <div className='app'>\n\n    <Switch>\n              <Route exact path=\"/\">\n               <Auth updateToken={this.updateToken} history={this.props.history}/>\n              </Route>\n              <Route exact path=\"/PlantIndex\">\n                {this.state.token !== null ? (\n                  <PlantIndex\n                    // plantCreate={this.props.plantCreate}\n                    updateToken={this.updateToken}\n                    clearToken={this.clearToken}\n                    // fetchPlants={this.props.fetchPlants}\n                    token={this.state.token}\n                  />\n                ) : (\n                  <Redirect to=\"/\" />\n                )}\n              </Route>\n          </Switch>\n      {/* <Home clearToken={this.clearToken.bind(this)} updateToken={this.updateToken.bind(this)}\n      token={this.state.token}  \n      // plantCreate={this.props.plantCreate} fetchPlants={this.props.fetchPlants}\n     /> */}\n   \n    {/* <Auth updateToken={this.updateToken.bind(this)}/> */}\n\n  </div>\n)\n  }\n}\n\n\n\n","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Auth.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/SignUp.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Login.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsCreate.tsx",["49"],"import { Component, MouseEvent } from \"react\";\nimport Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n\ntype PlantState = {\n  plantName: string;\n  plantImg: string;\n  temperature: string;\n  waterFrequency: string;\n  lastWatering: string;\n  isThriving: boolean;\n};\n\ninterface Props {\n// plantCreate: any,\ntoken: string | null;\n//  fetchPlants:()=> void\n}\n\nexport default class PlantCreate extends Component<Props, PlantState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      plantName: \"\",\n     plantImg: \"\",\n      temperature: \"\",\n      waterFrequency: \"\",\n      lastWatering: \"\",\n      isThriving: true,\n    };\n  }\n  \n  handleSubmit = (e: React.SyntheticEvent) => {\n    // console.log('oh hi mark')\n    e.preventDefault();\n    //fetch and set value\n    const plantData = new FormData();\n    plantData.append('plantName',  this.state.plantName)\n     plantData.append('image', this.state.plantImg)\n     plantData.append('temperature', this.state.temperature)\n    plantData.append('waterFrequency', this.state.waterFrequency)\n     plantData.append('lastWatering', this.state.lastWatering)\n     plantData.append('isThriving',  JSON.stringify(this.state.isThriving))\n    \n    const url: string = \"http://localhost:4000/plants/create\";\n    // const bodyObj: PlantState = {\n    //   plantName,\n    //   plantImg,\n    //   temperature,\n    //   waterFrequency,\n    //   lastWatering,\n    //   isThriving,\n    // };\n    fetch(url, {\n      method: \"POST\",\n      body: plantData,\n      headers: new Headers({\n        //  \"Content-Type\": \"application/json\",\n        'Authorization': `${this.props.token}`,\n      }),\n    })\n    .then((res) => res.json())\n      .then((data) => {\n       this.setState({\n         plantName: \"\",\n         temperature:\"\",\n         waterFrequency:\"\",\n         lastWatering:\"\",\n         isThriving:true,\n       })\n        console.log(data);\n       \n      });\n  };\n\n  handleTrueButton(e: MouseEvent) {\n    e.preventDefault();\n    this.setState({ isThriving: true })\n  }\n  handleFalseButton(e: MouseEvent) {\n    e.preventDefault();\n    this.setState({ isThriving: false })\n  }\n\n  singleFileChangedHandler = (e: any) => {\n    this.setState({\n    plantImg: e.target.files[0]\n\n    });\n}\n  //form.addEventListener('submit', (event) => {event.preventDefault(); this.submitForm()});\n\n  render() {\n    return (\n      <div>\n        <h1>Add a new plant</h1>\n        <form onSubmit={this.handleSubmit}  >\n          <input\n            placeholder=\"plant name\"\n            value={this.state.plantName}\n            onChange={(e: any) => this.setState({ plantName: e.currentTarget.value })}\n          />\n          <br />\n          <input\n        accept=\"image/*\"\n        className=''\n        id=\"contained-button-file\"\n        onChange={this.singleFileChangedHandler}\n        multiple\n        type=\"file\"\n      />\n      <label htmlFor=\"contained-button-file\">\n        {/* <Button variant=\"contained\" color=\"primary\" component=\"span\">\n          Upload\n        </Button> */}\n      </label>\n          {/* <input\n            placeholder=\"plant image\"\n            value={this.state.file}\n            onChange={this.singleFileChangedHandler}\n            // onChange=\n            // {(e: React.FormEvent<HTMLInputElement>)\n            //    => this.setState({ file: e.currentTarget.value })}\n          /> */}\n          <br />\n          <input\n            type=\"temperature\"\n            placeholder=\"temperature\"\n            value={this.state.temperature}\n            onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ temperature: e.currentTarget.value })}\n          />\n          <br />\n          <input\n            type=\"waterFrequency\"\n            placeholder=\"waterFrequency\"\n            value={this.state.waterFrequency}\n            onChange={(e: React.FormEvent<HTMLInputElement>) =>\n              this.setState({ waterFrequency: e.currentTarget.value })\n            }\n          />\n          <br />\n          <input\n            type=\"lastWatering\"\n            placeholder=\"lastWatering\"\n            value={this.state.lastWatering}\n            onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ lastWatering: e.currentTarget.value })}\n          />\n          <br />\n          <h3>Is your plant thriving?</h3>\n\n\n          <button className=\"trueBtn\" onClick={this.handleTrueButton.bind(this)}>\n            True\n          </button>\n          <button className=\"falseBtn\" onClick={this.handleFalseButton.bind(this)}>\n            False\n          </button>\n          <br/>\n          <button>Add Plant</button>\n      </form>\n      </div>\n    );\n  }\n}\n","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsDisplay.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/home/Home.tsx",["50","51"],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsIndex.tsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":3,"column":27,"nodeType":"58","messageId":"59","endLine":3,"endColumn":33},{"ruleId":"56","severity":1,"message":"60","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":12},{"ruleId":"56","severity":1,"message":"61","line":2,"column":8,"nodeType":"58","messageId":"59","endLine":2,"endColumn":14},{"ruleId":"56","severity":1,"message":"62","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":26},{"ruleId":"56","severity":1,"message":"57","line":2,"column":27,"nodeType":"58","messageId":"59","endLine":2,"endColumn":33},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"@typescript-eslint/no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'Button' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]