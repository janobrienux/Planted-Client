[{"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/index.tsx":"1","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/reportWebVitals.ts":"2","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/App.tsx":"3","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Auth.tsx":"4","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/SignUp.tsx":"5","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Login.tsx":"6","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsCreate.tsx":"7","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/home/Home.tsx":"8","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsIndex.tsx":"9","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantCard.tsx":"10","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantEdit.tsx":"11"},{"size":587,"mtime":1610230549228,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1609359949968,"results":"14","hashOfConfig":"13"},{"size":2131,"mtime":1610230569176,"results":"15","hashOfConfig":"13"},{"size":569,"mtime":1610232392703,"results":"16","hashOfConfig":"13"},{"size":5917,"mtime":1610208507544,"results":"17","hashOfConfig":"13"},{"size":3641,"mtime":1610232330335,"results":"18","hashOfConfig":"13"},{"size":4779,"mtime":1610214322014,"results":"19","hashOfConfig":"13"},{"size":1469,"mtime":1610232085918,"results":"20","hashOfConfig":"13"},{"size":1788,"mtime":1610233419583,"results":"21","hashOfConfig":"13"},{"size":984,"mtime":1610218102025,"results":"22","hashOfConfig":"13"},{"size":3934,"mtime":1610223872005,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19hwz88",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/index.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/reportWebVitals.ts",[],["49","50"],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/App.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Auth.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/SignUp.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Login.tsx",["51"],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsCreate.tsx",["52"],"import { Component, MouseEvent } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport './plantCreate.css'\n// import IconButton from '@material-ui/core/IconButton';\nimport {\n  Dialog, TextField, DialogContent, \n} from '@material-ui/core';\n\ntype PlantState = {\n  plantName: string;\n  plantImg: string;\n  temperature: string;\n  waterFrequency: string;\n  lastWatering: string;\n  isThriving: boolean;\n  handleopen: boolean,\n};\n\ninterface Props {\n// plantCreate: any,\ntoken: string | null;\n//  fetchPlants:()=> void\n}\n\nexport default class PlantCreate extends Component<Props, PlantState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      plantName: \"\",\n     plantImg: \"\",\n      temperature: \"\",\n      waterFrequency: \"\",\n      lastWatering: \"\",\n      isThriving: true,\n      handleopen: true,\n    };\n  }\n  \n  handleSubmit = (e: React.SyntheticEvent) => {\n    // console.log('oh hi mark')\n    e.preventDefault();\n    //fetch and set value\n    const plantData = new FormData();\n    plantData.append('plantName',  this.state.plantName)\n     plantData.append('image', this.state.plantImg)\n     plantData.append('temperature', this.state.temperature)\n    plantData.append('waterFrequency', this.state.waterFrequency)\n     plantData.append('lastWatering', this.state.lastWatering)\n     plantData.append('isThriving',  JSON.stringify(this.state.isThriving))\n    \n    const url: string = \"http://localhost:4000/plants/create\";\n    fetch(url, {\n      method: \"POST\",\n      body: plantData,\n      headers: new Headers({\n        //  \"Content-Type\": \"application/json\",\n        'Authorization': `${this.props.token}`,\n      }),\n    })\n    .then((res) => res.json())\n      .then((data) => {\n       this.setState({\n         plantName: \"\",\n         temperature:\"\",\n         waterFrequency:\"\",\n         lastWatering:\"\",\n         isThriving:true,\n       })\n        console.log(data);\n       \n      });\n  };\n\n  handleOpen = () => {\n    this.setState({\n        handleopen: true,\n    });\n};\n\nhandleClose = () => {\n    this.setState({\n        handleopen: false,\n    });\n};\n\n\n\n\n\n\n\n  handleTrueButton(e: MouseEvent) {\n    e.preventDefault();\n    this.setState({ isThriving: true })\n  }\n  handleFalseButton(e: MouseEvent) {\n    e.preventDefault();\n    this.setState({ isThriving: false })\n  }\n\n  singleFileChangedHandler = (e: any) => {\n    this.setState({\n    plantImg: e.target.files[0]\n\n    });\n}\n  //form.addEventListener('submit', (event) => {event.preventDefault(); this.submitForm()});\n\n  render() {\n    return (\n\n\n\n\n\n\n\n      \n      <div>\n          <Button onClick={this.handleOpen} id=\"CreateButton\" variant=\"outlined\">Add a new plant</Button>\n          <Dialog open={this.state.handleopen} onClose={this.handleClose}>\n        <h1>Add a new plant</h1>\n        <form onSubmit={this.handleSubmit}  >\n        <DialogContent id=\"Register\">\n          <input\n            placeholder=\"plant name\"\n            value={this.state.plantName}\n            onChange={(e: any) => this.setState({ plantName: e.currentTarget.value })}\n          />\n          <br />\n          <input\n        accept=\"image/*\"\n        className='imgInput'\n        id=\"contained-button-file\"\n        onChange={this.singleFileChangedHandler}\n        multiple\n        type=\"file\"\n      />\n      {/* <label htmlFor=\"contained-button-file\"> */}\n        {/* <Button variant=\"contained\" color=\"primary\" component=\"span\">\n          Upload\n        </Button> */}\n      {/* </label> */}\n          <br />\n          <input\n            type=\"temperature\"\n            placeholder=\"temperature\"\n            value={this.state.temperature}\n            onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ temperature: e.currentTarget.value })}\n          />\n          <br />\n          <input\n            type=\"waterFrequency\"\n            placeholder=\"waterFrequency\"\n            value={this.state.waterFrequency}\n            onChange={(e: React.FormEvent<HTMLInputElement>) =>\n              this.setState({ waterFrequency: e.currentTarget.value })\n            }\n          />\n          <br />\n          <input\n            type=\"lastWatering\"\n            placeholder=\"lastWatering\"\n            value={this.state.lastWatering}\n            onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ lastWatering: e.currentTarget.value })}\n          />\n          <br />\n          <h3>Is your plant thriving?</h3>\n          <button className=\"btn\" onClick={this.handleTrueButton.bind(this)}>\n            True\n          </button>\n          <button className=\"btn\" onClick={this.handleFalseButton.bind(this)}>\n            False\n          </button>\n          <br/>\n          <button className=\"btn\">Add Plant</button>\n          </DialogContent>\n      </form>\n      </Dialog>\n      </div>\n    );\n  }\n}\n","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/home/Home.tsx",["53","54","55","56"],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsIndex.tsx",["57","58"],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantCard.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantEdit.tsx",[],["59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":13},{"ruleId":"65","severity":1,"message":"69","line":6,"column":11,"nodeType":"67","messageId":"68","endLine":6,"endColumn":20},{"ruleId":"65","severity":1,"message":"70","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":26},{"ruleId":"65","severity":1,"message":"71","line":2,"column":43,"nodeType":"67","messageId":"68","endLine":2,"endColumn":49},{"ruleId":"65","severity":1,"message":"72","line":2,"column":51,"nodeType":"67","messageId":"68","endLine":2,"endColumn":59},{"ruleId":"65","severity":1,"message":"73","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":12},{"ruleId":"65","severity":1,"message":"74","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":17},{"ruleId":"65","severity":1,"message":"75","line":7,"column":8,"nodeType":"67","messageId":"68","endLine":7,"endColumn":17},{"ruleId":"61","replacedBy":"76"},{"ruleId":"63","replacedBy":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'Component' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'Auth' is defined but never used.","'PlantCard' is defined but never used.","'PlantEdit' is defined but never used.",["78"],["79"],"no-global-assign","no-unsafe-negation"]