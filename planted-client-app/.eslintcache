[{"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/index.tsx":"1","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/reportWebVitals.ts":"2","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/App.tsx":"3","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Auth.tsx":"4","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/SignUp.tsx":"5","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Login.tsx":"6","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsCreate.tsx":"7","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsDisplay.tsx":"8"},{"size":500,"mtime":1609359949945,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1609359949968,"results":"11","hashOfConfig":"10"},{"size":1059,"mtime":1609988775437,"results":"12","hashOfConfig":"10"},{"size":518,"mtime":1609988775441,"results":"13","hashOfConfig":"10"},{"size":3620,"mtime":1609988775454,"results":"14","hashOfConfig":"10"},{"size":1887,"mtime":1609988775442,"results":"15","hashOfConfig":"10"},{"size":4079,"mtime":1609988775464,"results":"16","hashOfConfig":"10"},{"size":314,"mtime":1609988775466,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"19hwz88",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/index.tsx",[],["36","37"],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/reportWebVitals.ts",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/App.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Auth.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/SignUp.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/auth/Login.tsx",[],"/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsCreate.tsx",["38"],"import { Component } from \"react\";\nimport Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n\ntype PlantState = {\n  plantName: string;\n  file: string;\n  temperature: string;\n  waterFrequency: string;\n  lastWatering: string;\n  isThriving: boolean;\n};\n\ninterface Props {\ntoken: string | null;\n}\n\nexport default class PlantCreate extends Component<Props, PlantState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      plantName: \"\",\n      file: \"\",\n      temperature: \"\",\n      waterFrequency: \"\",\n      lastWatering: \"\",\n      isThriving: true,\n    };\n  }\n  singleFileChangedHandler = (e: any) => {\n    this.setState({\n     file: e.target.files[0]\n    });\n}\n\n  handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    //fetch and set value\n    const plantName: string = this.state.plantName;\n    const file: string = this.state.file;\n    const temperature: string = this.state.temperature;\n    const waterFrequency: string = this.state.waterFrequency;\n    const lastWatering: string = this.state.lastWatering;\n    const isThriving: boolean = this.state.isThriving;\n\n    const url: string = \"http://localhost:4000/plants/create\";\n    const bodyObj: PlantState = {\n      plantName,\n      file,\n      temperature,\n      waterFrequency,\n      lastWatering,\n      isThriving,\n    };\n    fetch(url, {\n      method: \"POST\",\n      headers: new Headers({\n         \"Content-Type\": \"application/json\",\n        'Authorization': `${this.props.token}`,\n      }),\n      body: JSON.stringify(bodyObj),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n      //  this.setState(data)\n        console.log(data);\n      });\n  };\n\n\n  render() {\n    return (\n      <div>\n        <h1>Add a new plant</h1>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            placeholder=\"plant name\"\n            value={this.state.plantName}\n            onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ plantName: e.currentTarget.value })}\n          />\n          <br />\n          <input\n        accept=\"image/*\"\n        className=''\n        id=\"contained-button-file\"\n        multiple\n        type=\"file\"\n        onChange={this.singleFileChangedHandler}\n      />\n      <label htmlFor=\"contained-button-file\">\n        {/* <Button variant=\"contained\" color=\"primary\" component=\"span\">\n          Upload\n        </Button> */}\n      </label>\n          {/* <input\n            placeholder=\"plant image\"\n            value={this.state.file}\n            onChange={this.singleFileChangedHandler}\n            // onChange=\n            // {(e: React.FormEvent<HTMLInputElement>)\n            //    => this.setState({ file: e.currentTarget.value })}\n          /> */}\n          <br />\n          <input\n            type=\"temperature\"\n            placeholder=\"temperature\"\n            value={this.state.temperature}\n            onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ temperature: e.currentTarget.value })}\n          />\n          <br />\n          <input\n            type=\"waterFrequency\"\n            placeholder=\"waterFrequency\"\n            value={this.state.waterFrequency}\n            onChange={(e: React.FormEvent<HTMLInputElement>) =>\n              this.setState({ waterFrequency: e.currentTarget.value })\n            }\n          />\n          <br />\n          <input\n            type=\"lastWatering\"\n            placeholder=\"lastWatering\"\n            value={this.state.lastWatering}\n            onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ lastWatering: e.currentTarget.value })}\n          />\n          <br />\n          <h3>Is your plant thriving?</h3>\n          {/* <button className=\"trueBtn\" color=\"primary\" onClick={() => this.setState({ isThriving: true })}>\n            True\n          </button>\n          <button className=\"falseBtn\" color=\"secondary\" onClick={() => this.setState({ isThriving: false })}>\n            False\n          </button> */}\n          <br/>\n          <button>Add Plant</button>\n      </form>\n      </div>\n    );\n  }\n}\n","/Users/januaryobrien/Desktop/ElevenFiftyProjects/WDOctober2020/Planted-Server/Planted-Client/Planted-Client/planted-client-app/src/components/plants/PlantsDisplay.tsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":14},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]